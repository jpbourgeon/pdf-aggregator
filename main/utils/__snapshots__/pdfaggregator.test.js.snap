// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PDF Aggregator Tests that write to the output folder the async aggregate function on an empty folder should match an empty snapshot 1`] = `Array []`;

exports[`PDF Aggregator Tests that write to the output folder the async makeEmptyPdf function should make an empty pdf document to use as a template 1`] = `
Array [
  "JVBERi0xLjYKJe+/ve+/ve+/ve+/vQoKMyAwIG9iago8PAoJL0xlbmd0aCA0IDAgUgo+PgpzdHJlYW0KL0NTMSBDUwovQ1MxIGNzCkVUCmVuZHN0cmVhbQplbmRvYmoKCjQgMCBvYmoKMTgKZW5kb2JqCgo1IDAgb2JqCjw8CgkvVHlwZSAvUGFnZQoJL1BhcmVudCAxIDAgUgoJL1Jlc291cmNlcyA8PAoJCS9Db2xvclNwYWNlIDw8CgkJCS9DUzEgWy9JQ0NCYXNlZCAyIDAgUl0KCQk+PgoJCS9Qcm9jU2V0IFsvUERGIC9UZXh0IC9JbWFnZUIgL0ltYWdlQyAvSW1hZ2VJXQoJCS9Gb250IDw8CgkJPj4KCQkvWE9iamVjdCA8PAoJCT4+Cgk+PgoJL0NvbnRlbnRzIFszIDAgUl0KPj4KZW5kb2JqCgoxIDAgb2JqCjw8CgkvVHlwZSAvUGFnZXMKCS9NZWRpYUJveCBbMCAwIDU5NS4yOTYgODQxLjg5Nl0KCS9LaWRzIFs1IDAgUl0KCS9Db3VudCAxCj4+CmVuZG9iagoKMiAwIG9iago8PAoJL0xlbmd0aCAzNDMyCgkvTiAzCgkvQWx0ZXJuYXRlIC9EZXZpY2VSR0IKCS9GaWx0ZXIgL0FTQ0lJODVEZWNvZGUKPj4Kc3RyZWFtCiEhIURqeiFXVzMjRC9PSDk7RmElcj1CU2ZNI01CKFohI2tuUSEkaE9kQDpPQHR6enp6ISEhISJ6eiEhKWBEISEqJyIhIShKInonJnBzcmBXQyNoP0o/MjBTOFRiQXp6enp6enohISEhMUE3XWdsISEhJGYhISEiRUBUWmM6ISEhJjghISEhNUBUNjVtISEhJkwhISE5NUIyaGJyISEhJkwhISE5NUVgPnEoISEhJkwhISE5NUE4UGpmISEhPmAhISEiVEIzODs/ISEhQD4hISEhNUNpc1QvISEhQFIhISEhNUQuUi1zISEhQGYhISEhRUBWXXEpISEhQTUhISEhNUVgY0lKISEhQUkhISEhNUZDZXJxISEhQV0hISEhLUcnLkEsISEhQWkhISEiU0dCQGVHISEhQ0chISEhNUByUUkxISEhQ1shISEhWEBxXTpdISEhRD4hISEhTUE3XWdseiEhISFARiZHTHArQSMhaDJESTNNMkQkWzkwZCdxQUA6TydxRig4V3BBUmtjQHp6enp6enp6enp6enp6enp6enp6PUJTZk16ISEiOjshISFPXyEhJ0lSQHMpZzh6ISEhLSUhISEhJiEiJl06ISMsRE4hJDIrYiElN2ghISY9TzUhJzowRyEoP2xbISlFU28hKks7LiErUSJCISxWXlYhLVxFaiEuYi0pIS9naT0hMG1QUSExczdlITMjdCQhM3VVNiE1JjxKITYsI14hNzFfciE4QE0zITlGNEghOlUhXiE7Y2N0IT0mVzchPj5KTyE/Vj1nIUBuMSshQjoqRCFDWyNfIUUmciQhRlBxQCFIJXBcIUlPcCMhSy11QSFMYSVfIU4/KykhUCY2SSFRYkFpIVNJTTQhVTBYVSFWdWoiIVhvLEUhWl89aCFcWFU3IV5RbFwhYFQ1LCFiVlJTIWRYcCQhZmQ+TCFob2F0IWsmMEghbTpZcSFvTy5HIXFjV3EhdCwySCIhSWF1IiNwQk0iJkIjJiIoaFhVIitDPzAiLXMlYCIwTWE7IjMxTW0iNWo6SiI4TicoIjs6blwiPidhPCJAcllxIkNoUlMiRl5LNCJJXUlsIkxcSE8iT2RNNCJSbFFuIlV0VlQiWTBhOyJcQWwiIl9TIV8iYm0ySCJmO0kyImlVWXEibSNwXSJwUDhJInQnVTYjIlNyJCMmND9oIylpYlcjLVM2SCMxM1k4IzUmMysjOG1hcyM8YDtmI0BSalojRE5KTyNIUzBGI0xXaz0jUFxRNCNUaj0tI1kjKScjXTlwIiNhUGFyI2VnU20jajJLaiNuUkNoI3MmQWckIk8/ZiQnLENnJCteR2gkMDtLaiQ1IVVtJDlcX3EkPktwISRDRDEnJEgzQS0kTStXNSRSLHM9JFcuOkckXC9WUCRhOiNbJGZNS2gka2BzdSRwdEcuJSE7dT0lJlhOTCUrdSdcJTFOYW4lNnRBKyU8TiY+JUIwZlMlR2hRaCVNSz0pJVM3LkAlWSJ0WCVebGtxJWRqaTYlal9gUCVwZmNtJiFkYTQmJ2tkUSYuJm1wJjQ3IjsmOlAxWyZAaUEoJkc2VksmTVhrbiZUJiw9JlpRR2ImYTBpNCZnZTVbJm5EVy4mdS0pVycmc1ctJy1lL1gnNFZdLic7UTtcJ0JLbzQnSU9TZCdQXD4/J1dpKHAnXnVoTSdmNlkrJ21MSV8ndGtAPygnPj0hKC5mOVgoNjk2Oig9ajh0KEVGO1goTStEPihUblMmKFxcYWMoZEpwTChsQjA2KHRCSyIpJ0JlYykvQytQKTdMTD4pP15zLilHcURzKVAua2QpWEpDVylgbyFLKWk+VD8pcWw4NSolRHErKi4mWyMqNl1EcSo/SDRrKkgzJGUqUSZvYSpZb2VeKmJsYVwqa2ldWyp0b19bKykpZ10rMjhvXys7SCJiK0RgMGYrTixEbCtXTVhyK2EicyUrak04Lit0IlI3LChfI0IsMkZJTiw8LW9bLEVzRmksT2NzIyxZXVAzLGNgM0UsbWJrVy0iblRrLS0lPistNzotQS1BTnFXLUtsZm8tVjVcMy1gXFdNLWsuUmgtdWdaMC4rQltNLjYmYmwuQGhwNy5LVihXLlZMPCQuYUtVSC5sSm5sLyJKMzwvLVJSYi84ZCM1L0N1SF4vTzp0My9aVUpeL2YkJzUvcVBeYjAoKEE8MDNVI2swPzVhRjBKdFAjMFZnRFcwYlEzNTBuTS1rMSVJKEwxMU4pLzE9UyloMUlhME0xVW83MjFiMUNvMW5IUFYyJXFpQTIyPScrMj5vRWwyS0NeWTJYKi5HMmRlUzcycUwjJzMpRFNuMzY0KWAzQzVgVTNQN0JKM105JEAzakxnODQiV08wNC90Qys0PTw3JjRKWSsiNFgqJHQ0ZVkkczRzMyRzNStrKnQ1OVc3IjVHQ0MlNVUvTyk1Yy1nMDVxLCo3NioqQj82ODFgSDZGQi9TNlRSU182YmwobDZxOVkmNypcNDY3OSlkRjdHXktYN1Y+Mms3ZHJvKjdzZGJBOC1NT1c4PEhIcDhLQ0I0OFo+O044aUtAajkjT0AyOTJlS1A5QiZWcDlRRWg8OWBlJF05cDg8LDoqaVlROjpGIiE6SiI/RzpZZWhwOmlUPUQ7JEtsbzs0Q0dGO0REJ3M7VERdTDtkV0onO3RhMFc8MCgjNTxAQ2ppPFBoY0k8YThcKTxxZlpgPS0/WUM9PipkKT1OYWhjPV9WJEs9cEo1Mz4sR0tyPj1EYl0+TksqST5fWk03PnBpcCY/LS1Daz8+TnJdP09wTFA/YUYsRD9ycGE5QC9PRy9AQTczJ0BTKCUhQGRta3BBIV5da0EzYVtpQUVkWWdBV2dXZkFqJ2FoQic8a2pCOVF1bUJLcDByQl5CRyNCcHJjK0MuTiozQ0EyTD5DU3R0SkNmYkdWRCRYdWREN09Oc0RKTy4uRF1XaEFEcGBNU0UvJj5pRUI4KilFVVwhQUVpKm1ZRidXanNGOy9oOUZOZWtVRmJPdHNHITopPUc1LTheR0kpTitHXSVjTUdxKylySDA5S0NIRFBya0hYaEU+SG0qbGdJLFRLPklBKSlqSVVbY0NJajlHckopdTJOSj5lIytKU1RoXUpoVmU+SyhPW3NLPVpeVktSZWE5S2gkaXRMKDhyWUw9XzJCTFMnQSpMaFZbak0pMSFWTT5pQkNNVFVpMk1qQjshTis3Z2hOQTZFW05XNSNOTm08XERPLk1GO09EXjAyT1sidSxPcUVrJ1AyaGEjUEk/XHVQX3RedFEhXWZ1UThGbyJRTzkoJVFmKzYpUigvUDBSPzNqN1JWOC8/Um1OVUpTL2UmVVNHL1JiU15PKXBUISJcK1Q4VD88VFA6KE9UZ3RmYlUqY1YjVUJbSzpVWlNAUVVyVDtrVjVePTFWTWg+TVZmJkVqVylCUzRXQWdmVVdaOCUiV3JmPkVYNkhdalhPKyg7WGdrTWNZK2AkN1lEXVViWV1bMjhaIWFpZlo6aEw/WlQsOm9abUUpTFsxZnMqW0szZ15bZF5iPlwpPWMhXEMlaVpcXGJwPl0hXS4mXTtOOmJdVVFTTF1vVGw3XjRhNiNeTyFaZl5pNypVXy5VVUVfSSgxN19jWGgrYCk0SXVgQ24xa2BeW3RjYSRJYlxhP0BWV2FaQFBTYXVJUFFiO1JQUGJWZFZQYnIqYlJjOE50VmNTczFbY29LSWFkNixnamRRYzByZG1WWyllNEowNWVQPVpCZWxDO1JmM0hxY2ZPV1h1ZmtmQDNnMzIzSWdPUyZfZ2tzbyFoM1FuO2hQL21WaGxrcnJpNFwpO2lRVTpbaW5OTCdqNlBjSWpTXCttanBnST1rOSZsZGtWREE3a3NqcGFsPEVROGxZdTFlbSJYbT5tQDxTbW1eMkZKbicoOSduRScxXG5jLzA9byw3LnRvSkgzV29oYj48cDIwTyNwUFNfYHBvKyFKcThgPjVxV0lhInIhMy5lckAuXVZyXyo3R3MpJWY5QTddZ2x6ISEhIU84T1l1aDJESTNNMkQkWzkwZCZrcUFtb2d1RjxGSU82NkpYNkNpPUg6K0IqNWZAcT9jNytFTEZONjMkdWN6enp6enp6enp6enp6enp6enp6PUJTZk16ISEkSnIhISdLXiEhIWtpPUJTZk16eiEpTlhxekQuUi1zeiEhISEienp6enohISEhIz1CU2ZNeiEhISJqISEhInAhISEiUz1CU2ZNeiEhJHIzISEjIk8hISErX0YobzgwejZXLWwrQTddZ2x6ISEhIU47SXNIT0ViMCx1QUtZI2ZBVHFqK0ItOVFbRElkSSdCbEBsM0JsNSViNzcvMVUwZl8tTS9NXG40enp6enp6enp6enp6enp6enp6eno9QlNmTXohISlgRCEhKiciISEoSiJGQ2ZdPXo2WjZwaEViVDAiRjxGLm1GQ2ZLMUA8PzQlRElJPyg2WjZkWkVaZF9mREtCYDpGRDVsNy8wSF0lMEtCKzVGKFIzYHohISpLciEhITJbczhWWzshISE3ZyEhKXRZczhWdGlzOFclbCEhISxVISEnZld+PgplbmRzdHJlYW0KCmVuZG9iagoKNiAwIG9iago8PAoJL1R5cGUgL0NhdGFsb2cKCS9QYWdlcyAxIDAgUgo+PgplbmRvYmoKCnhyZWYKMCA3CjAwMDAwMDAwMDAgNjU1MzUgZiAKMDAwMDAwMDMyNyAwMDAwMCBuIAowMDAwMDAwNDIxIDAwMDAwIG4gCjAwMDAwMDAwMTYgMDAwMDAgbiAKMDAwMDAwMDA4OSAwMDAwMCBuIAowMDAwMDAwMTA4IDAwMDAwIG4gCjAwMDAwMDM5NjEgMDAwMDAgbiAKdHJhaWxlcgo8PAoJL1NpemUgNwoJL1Jvb3QgNiAwIFIKCS9JRCBbPDAwNDAwMDQzMDA0ZDAwNDIwMDRmMDA0Yz4gPDAwNDAwMDQzMDA0ZDAwNDIwMDRmMDA0Yz5dCgkvSW5mbyA8PAoJCS9Qcm9kdWNlciAocGRmLWFnZ3JlZ2F0b3I6IF9ibGFuayB0ZW1wbGF0ZSkKCQkvQ3JlYXRpb25EYXRlIChEOk1PQ0tFRF9EQVRFKQoJPj4KPj4Kc3RhcnR4cmVmCjQwMTMKJSVFT0Y=",
]
`;

exports[`PDF Aggregator the async crawlFolder function should return a valid snapshot 1`] = `
Array [
  Object {
    "depth": 1,
    "fullPath": "[MOCKED_OS_SPECIFIC_PATH]/pdfaggregator/input/Empty_folder",
    "lastModified": "MOCKED_DATE",
    "name": "Empty_folder",
    "parentDir": "",
    "type": "directory",
  },
  Object {
    "depth": 1,
    "fullPath": "[MOCKED_OS_SPECIFIC_PATH]/pdfaggregator/input/File_01.pdf",
    "lastModified": "MOCKED_DATE",
    "name": "File_01.pdf",
    "parentDir": "",
    "type": "file",
  },
  Object {
    "depth": 1,
    "fullPath": "[MOCKED_OS_SPECIFIC_PATH]/pdfaggregator/input/Folder_01",
    "lastModified": "MOCKED_DATE",
    "name": "Folder_01",
    "parentDir": "",
    "type": "directory",
  },
  Object {
    "depth": 2,
    "fullPath": "[MOCKED_OS_SPECIFIC_PATH]/pdfaggregator/input/Folder_01/Folder_01_File_01.pdf",
    "lastModified": "MOCKED_DATE",
    "name": "Folder_01_File_01.pdf",
    "parentDir": "Folder_01",
    "type": "file",
  },
  Object {
    "depth": 2,
    "fullPath": "[MOCKED_OS_SPECIFIC_PATH]/pdfaggregator/input/Folder_01/Folder_01_Subfolder_01",
    "lastModified": "MOCKED_DATE",
    "name": "Folder_01_Subfolder_01",
    "parentDir": "Folder_01",
    "type": "directory",
  },
  Object {
    "depth": 3,
    "fullPath": "[MOCKED_OS_SPECIFIC_PATH]/pdfaggregator/input/Folder_01/Folder_01_Subfolder_01/Folder_01_Subfolder01_File_01.pdf",
    "lastModified": "MOCKED_DATE",
    "name": "Folder_01_Subfolder01_File_01.pdf",
    "parentDir": "Folder_01/Folder_01_Subfolder_01",
    "type": "file",
  },
  Object {
    "depth": 3,
    "fullPath": "[MOCKED_OS_SPECIFIC_PATH]/pdfaggregator/input/Folder_01/Folder_01_Subfolder_01/Folder_01_Subfolder01_File_02.pdf",
    "lastModified": "MOCKED_DATE",
    "name": "Folder_01_Subfolder01_File_02.pdf",
    "parentDir": "Folder_01/Folder_01_Subfolder_01",
    "type": "file",
  },
  Object {
    "depth": 3,
    "fullPath": "[MOCKED_OS_SPECIFIC_PATH]/pdfaggregator/input/Folder_01/Folder_01_Subfolder_01/Folder_01_Subfolder_01_Subsubfolder01",
    "lastModified": "MOCKED_DATE",
    "name": "Folder_01_Subfolder_01_Subsubfolder01",
    "parentDir": "Folder_01/Folder_01_Subfolder_01",
    "type": "directory",
  },
  Object {
    "depth": 2,
    "fullPath": "[MOCKED_OS_SPECIFIC_PATH]/pdfaggregator/input/Folder_01/Folder_01_Subfolder_02",
    "lastModified": "MOCKED_DATE",
    "name": "Folder_01_Subfolder_02",
    "parentDir": "Folder_01",
    "type": "directory",
  },
  Object {
    "depth": 3,
    "fullPath": "[MOCKED_OS_SPECIFIC_PATH]/pdfaggregator/input/Folder_01/Folder_01_Subfolder_02/Folder_01_Subfolder02_File_01.pdf",
    "lastModified": "MOCKED_DATE",
    "name": "Folder_01_Subfolder02_File_01.pdf",
    "parentDir": "Folder_01/Folder_01_Subfolder_02",
    "type": "file",
  },
  Object {
    "depth": 1,
    "fullPath": "[MOCKED_OS_SPECIFIC_PATH]/pdfaggregator/input/Folder_02",
    "lastModified": "MOCKED_DATE",
    "name": "Folder_02",
    "parentDir": "",
    "type": "directory",
  },
  Object {
    "depth": 2,
    "fullPath": "[MOCKED_OS_SPECIFIC_PATH]/pdfaggregator/input/Folder_02/Folder_02_Subfolder_01",
    "lastModified": "MOCKED_DATE",
    "name": "Folder_02_Subfolder_01",
    "parentDir": "Folder_02",
    "type": "directory",
  },
  Object {
    "depth": 3,
    "fullPath": "[MOCKED_OS_SPECIFIC_PATH]/pdfaggregator/input/Folder_02/Folder_02_Subfolder_01/Folder_02_Subfolder_01_File_01.pdf",
    "lastModified": "MOCKED_DATE",
    "name": "Folder_02_Subfolder_01_File_01.pdf",
    "parentDir": "Folder_02/Folder_02_Subfolder_01",
    "type": "file",
  },
  Object {
    "depth": 2,
    "fullPath": "[MOCKED_OS_SPECIFIC_PATH]/pdfaggregator/input/Folder_02/Folder_02_Subfolder_02",
    "lastModified": "MOCKED_DATE",
    "name": "Folder_02_Subfolder_02",
    "parentDir": "Folder_02",
    "type": "directory",
  },
]
`;

exports[`PDF Aggregator the async getFoldersToAggregate function should match the snapshot of the folders at level 1 1`] = `
Array [
  "[MOCKED_OS_SPECIFIC_PATH]/pdfaggregator/input/Empty_folder",
  "[MOCKED_OS_SPECIFIC_PATH]/pdfaggregator/input/Folder_01",
  "[MOCKED_OS_SPECIFIC_PATH]/pdfaggregator/input/Folder_02",
]
`;

exports[`PDF Aggregator the async getFoldersToAggregate function should match the snapshot of the folders at the tree's max depth, if the level provided is greater than it 1`] = `
Array [
  "[MOCKED_OS_SPECIFIC_PATH]/pdfaggregator/input/Folder_01/Folder_01_Subfolder_01/Folder_01_Subfolder_01_Subsubfolder01",
]
`;

exports[`PDF Aggregator the getSubTree function should match the snapshot of the subtree with a limited depth 1`] = `
Array [
  Object {
    "depth": 2,
    "fullPath": "/file/path/",
  },
  Object {
    "depth": 3,
    "fullPath": "/file/path/file1.pdf",
  },
  Object {
    "depth": 3,
    "fullPath": "/file/path/folder1",
  },
]
`;

exports[`PDF Aggregator the getSubTree function should match the snapshot of the subtree with an unlimited depth 1`] = `
Array [
  Object {
    "depth": 2,
    "fullPath": "/file/path/",
  },
  Object {
    "depth": 3,
    "fullPath": "/file/path/file1.pdf",
  },
  Object {
    "depth": 3,
    "fullPath": "/file/path/folder1",
  },
  Object {
    "depth": 4,
    "fullPath": "/file/path/folder1/file1.pdf",
  },
]
`;

exports[`PDF Aggregator the stripEmptyFolders function should match the snapshot of the cleaned subtree 1`] = `
Array [
  Object {
    "fullPath": "",
    "type": "directory",
  },
  Object {
    "fullPath": "file1.pdf",
    "type": "file",
  },
  Object {
    "fullPath": "/file/",
    "type": "directory",
  },
  Object {
    "fullPath": "/file/file1.pdf",
    "type": "file",
  },
  Object {
    "fullPath": "/file/path/",
    "type": "directory",
  },
  Object {
    "fullPath": "/file/path/folder1",
    "type": "directory",
  },
  Object {
    "fullPath": "/file/path/folder1/file1.pdf",
    "type": "file",
  },
]
`;

exports[`PDF Aggregator the stripEmptyFolders function should work on empty folders 1`] = `Array []`;
