// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PDF Aggregator the crawlFolder function should return a valid snapshot 1`] = `
Array [
  Object {
    "depth": 1,
    "fullPath": "[MOCKED_OS_SPECIFIC_PATH]/pdfaggregator/input/Folder_00_File_01.pdf",
    "lastModified": "MOCKED_DATE",
    "name": "Folder_00_File_01.pdf",
    "parentDir": "",
    "type": "file",
  },
  Object {
    "depth": 1,
    "fullPath": "[MOCKED_OS_SPECIFIC_PATH]/pdfaggregator/input/Folder_00_File_02.pdf",
    "lastModified": "MOCKED_DATE",
    "name": "Folder_00_File_02.pdf",
    "parentDir": "",
    "type": "file",
  },
  Object {
    "depth": 1,
    "fullPath": "[MOCKED_OS_SPECIFIC_PATH]/pdfaggregator/input/Folder_01",
    "lastModified": "MOCKED_DATE",
    "name": "Folder_01",
    "parentDir": "",
    "type": "directory",
  },
  Object {
    "depth": 2,
    "fullPath": "[MOCKED_OS_SPECIFIC_PATH]/pdfaggregator/input/Folder_01/Folder_01_Subfolder_01",
    "lastModified": "MOCKED_DATE",
    "name": "Folder_01_Subfolder_01",
    "parentDir": "Folder_01",
    "type": "directory",
  },
  Object {
    "depth": 2,
    "fullPath": "[MOCKED_OS_SPECIFIC_PATH]/pdfaggregator/input/Folder_01/Folder_01_Subfolder_02",
    "lastModified": "MOCKED_DATE",
    "name": "Folder_01_Subfolder_02",
    "parentDir": "Folder_01",
    "type": "directory",
  },
  Object {
    "depth": 1,
    "fullPath": "[MOCKED_OS_SPECIFIC_PATH]/pdfaggregator/input/Folder_02",
    "lastModified": "MOCKED_DATE",
    "name": "Folder_02",
    "parentDir": "",
    "type": "directory",
  },
  Object {
    "depth": 2,
    "fullPath": "[MOCKED_OS_SPECIFIC_PATH]/pdfaggregator/input/Folder_02/Folder_02_Subfolder_01",
    "lastModified": "MOCKED_DATE",
    "name": "Folder_02_Subfolder_01",
    "parentDir": "Folder_02",
    "type": "directory",
  },
  Object {
    "depth": 2,
    "fullPath": "[MOCKED_OS_SPECIFIC_PATH]/pdfaggregator/input/Folder_02/Folder_02_Subfolder_02",
    "lastModified": "MOCKED_DATE",
    "name": "Folder_02_Subfolder_02",
    "parentDir": "Folder_02",
    "type": "directory",
  },
]
`;

exports[`PDF Aggregator the getFoldersToAggregate function should match the snapshot for level 2 1`] = `
Array [
  "[MOCKED_OS_SPECIFIC_PATH]/pdfaggregator/input/Folder_01/Folder_01_Subfolder_01",
  "[MOCKED_OS_SPECIFIC_PATH]/pdfaggregator/input/Folder_01/Folder_01_Subfolder_02",
  "[MOCKED_OS_SPECIFIC_PATH]/pdfaggregator/input/Folder_02/Folder_02_Subfolder_01",
  "[MOCKED_OS_SPECIFIC_PATH]/pdfaggregator/input/Folder_02/Folder_02_Subfolder_02",
]
`;

exports[`PDF Aggregator the getFoldersToAggregate function should match the snapshot of the tree's max depth, if the level provided is greater than it 1`] = `Array []`;

exports[`PDF Aggregator the getSubTree function should return a tree of pdf files otherwise 1`] = `
Array [
  Object {
    "fullPath": "/file/path/",
  },
  Object {
    "fullPath": "/file/path/file1.pdf",
  },
  Object {
    "fullPath": "/file/path/folder1",
  },
  Object {
    "fullPath": "/file/path/folder1/file1/pdf",
  },
]
`;
