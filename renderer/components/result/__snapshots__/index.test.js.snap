// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The renderView component of the result page should render correctly 1`] = `
<React.Fragment>
  <SideEffect(Head)>
    <title />
    <meta
      name="description"
    />
    <meta
      content="undefined <undefined>"
      name="author"
    />
  </SideEffect(Head)>
  <div
    className={[MockFunction]}
  >
    <WithStyles(Component) />
    <div
      className=""
    >
      <WithStyles(Button)
        onClick={[Function]}
      >
        isDone (
        false
        )
      </WithStyles(Button)>
      <WithStyles(Button)
        onClick={[Function]}
      >
        hasErrors (
        false
        )
      </WithStyles(Button)>
      <WithStyles(Button)
        onClick={[Function]}
      >
        isDev (
        true
        )
      </WithStyles(Button)>
    </div>
    <WithStyles(Grid)
      container={true}
      spacing={24}
    >
      <WithStyles(Grid)
        item={true}
        xs={12}
      >
        <WithStyles(Typography)
          className={[MockFunction]}
          variant="display1"
        >
          <span
            className=""
          />
          <span />
          <WithStyles(IconButton)
            onClick={[MockFunction]}
            size="small"
            variant="raised"
          >
            <pure(Info) />
          </WithStyles(IconButton)>
        </WithStyles(Typography)>
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        xs={12}
      >
        <WithStyles(Button)
          className="function () {
        return fn.apply(this, arguments);
      }"
          color="default"
          onClick={[Function]}
          size="small"
          variant="raised"
        >
          <pure(Cancel) />
        </WithStyles(Button)>
        <WithStyles(Button)
          className="function () {
        return fn.apply(this, arguments);
      } undefined"
          color="primary"
          onClick={[Function]}
          size="small"
          type="submit"
          variant="raised"
        >
          <pure(FolderOpen) />
        </WithStyles(Button)>
        <WithStyles(Button)
          className="undefined"
          color="default"
          size="small"
          variant="raised"
        >
          <pure(Home) />
        </WithStyles(Button)>
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        xs={12}
      >
        <WithStyles(LinearProgress)
          color="primary"
          hidden={false}
        />
        <WithStyles(Card)
          color="primary"
          elevation={0}
        >
          <WithStyles(CardContent)>
            <WithStyles(Typography)
              color="primary"
              variant="title"
            >
              <div
                className=""
              >
                Chargement...
              </div>
              <div />
              <br />
              <WithStyles(Button)
                className="function () {
        return fn.apply(this, arguments);
      } undefined"
                size="small"
                variant="raised"
              >
                <pure(Save) />
              </WithStyles(Button)>
            </WithStyles(Typography)>
          </WithStyles(CardContent)>
          <WithStyles(CardContent)>
            <WithStyles(List) />
          </WithStyles(CardContent)>
        </WithStyles(Card)>
      </WithStyles(Grid)>
    </WithStyles(Grid)>
    <WithStyles(Snackbar)
      ContentProps={
        Object {
          "aria-describedby": "message-id",
        }
      }
      action={
        <WithStyles(IconButton)
          aria-label="Close"
          color="inherit"
        >
          <pure(Close) />
        </WithStyles(IconButton)>
      }
      anchorOrigin={
        Object {
          "horizontal": "center",
          "vertical": "bottom",
        }
      }
      autoHideDuration={3000}
      message={
        <span
          id="message-id"
        >
          
        </span>
      }
      open={false}
    />
  </div>
</React.Fragment>
`;
