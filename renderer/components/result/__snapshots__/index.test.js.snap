// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The renderView component of the result page should render correctly 1`] = `
<div
  className={[MockFunction]}
>
  <WithStyles(Component) />
  <div
    className=""
  >
    <WithStyles(Button)
      onClick={[Function]}
    >
      isDone (
      false
      )
    </WithStyles(Button)>
    <WithStyles(Button)
      onClick={[Function]}
    >
      hasErrors (
      false
      )
    </WithStyles(Button)>
    <WithStyles(Button)
      onClick={[Function]}
    >
      isDev (
      true
      )
    </WithStyles(Button)>
  </div>
  <WithStyles(GridWrapper)
    container={true}
    spacing={24}
  >
    <WithStyles(GridWrapper)
      item={true}
      xs={12}
    >
      <WithStyles(Typography)
        className={[MockFunction]}
        variant="display1"
      >
        <span
          className=""
        >
          Traitement en cours
        </span>
        <span>
          Traitement terminé
        </span>
        <WithStyles(IconButton)
          onClick={[MockFunction]}
          size="small"
          variant="raised"
        >
          <pure(HelpOutline) />
        </WithStyles(IconButton)>
      </WithStyles(Typography)>
    </WithStyles(GridWrapper)>
    <WithStyles(GridWrapper)
      item={true}
      xs={12}
    >
      <WithStyles(Button)
        className="function () {
        return fn.apply(this, arguments);
      } undefined"
        color="primary"
        onClick={[Function]}
        size="small"
        type="submit"
        variant="raised"
      >
        <pure(FolderOpen) />
        Ouvrir le dossier cible
      </WithStyles(Button)>
      <WithStyles(Button)
        className="undefined"
        color="default"
        size="small"
        variant="raised"
      >
        <pure(Home) />
        Nouveau traitement
      </WithStyles(Button)>
    </WithStyles(GridWrapper)>
    <WithStyles(GridWrapper)
      item={true}
      xs={12}
    >
      <WithStyles(LinearProgress)
        color="primary"
        hidden={false}
      />
      <WithStyles(Card)
        color="primary"
        elevation={0}
      >
        <WithStyles(CardContent)>
          <WithStyles(Typography)
            color="primary"
            variant="title"
          >
            <div
              className=""
            >
              Chargement...
            </div>
            <div>
              Journal des opérations
            </div>
            <br />
            <WithStyles(Button)
              className="function () {
        return fn.apply(this, arguments);
      } undefined"
              size="small"
              variant="raised"
            >
              <pure(Save) />
              Sauver
            </WithStyles(Button)>
          </WithStyles(Typography)>
        </WithStyles(CardContent)>
        <WithStyles(CardContent)>
          <WithStyles(List) />
        </WithStyles(CardContent)>
      </WithStyles(Card)>
    </WithStyles(GridWrapper)>
  </WithStyles(GridWrapper)>
  <WithStyles(Snackbar)
    ContentProps={
      Object {
        "aria-describedby": "message-id",
      }
    }
    action={
      <WithStyles(IconButton)
        aria-label="Close"
        color="inherit"
      >
        <pure(Close) />
      </WithStyles(IconButton)>
    }
    anchorOrigin={
      Object {
        "horizontal": "center",
        "vertical": "bottom",
      }
    }
    autoHideDuration={3000}
    message={
      <span
        id="message-id"
      >
        Coucou
      </span>
    }
    open={false}
  />
</div>
`;
